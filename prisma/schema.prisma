// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator erd {
  provider = "prisma-erd-generator"
}

model User {
  userId       Int           @id @default(autoincrement())
  login        String        @unique
  email        String?       @unique
  name         String
  password     String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  posts        Post[]
  comments     Comment[]
  commentLikes CommentLike[]
  postLikes    PostLike[]
}

model Post {
  postId    Int        @id @default(autoincrement())
  message   String
  userId    Int
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  user      User       @relation(fields: [userId], references: [userId])
  comments  Comment[]
  likes     PostLike[]
}

model Comment {
  commentId Int           @id @default(autoincrement())
  message   String
  postId    Int
  userId    Int
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  post      Post          @relation(fields: [postId], references: [postId])
  user      User          @relation(fields: [userId], references: [userId])
  likes     CommentLike[]
}

model CommentLike {
  commentLikeId Int      @id @default(autoincrement())
  commentId     Int
  userId        Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  comment       Comment  @relation(fields: [commentId], references: [commentId])
  user          User     @relation(fields: [userId], references: [userId])

  @@unique([commentId, userId])
}

model PostLike {
  postLikeId Int      @id @default(autoincrement())
  postId     Int
  userId     Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  post       Post     @relation(fields: [postId], references: [postId])
  user       User     @relation(fields: [userId], references: [userId])

  @@unique([postId, userId])
}
